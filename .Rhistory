out
out
head(trees@data)
res
p
p
res
tae
str(d)
library(ggplot2)
str(d)
?rasterCalc
?calc
?overlay
?differnce
?diff
r9e
?focal
plot(r6t
)
sort(c(576, 1847, 1786, 860, 969, 1834, 44, 1472, 1279, 479, 863, 711, 799, 770))
dput(sort(c(576, 1847, 1786, 860, 969, 1834, 44, 1472, 1279, 479, 863, 711, 799, 770)))
library(raster)
library(lidR)
b <- shapefile("/home/erker/hgt_data/madison_tree_inventories/hgt/trees_buf.shp")
l <- readLAS("/home/erker/hgt_data/madison_lidar_2016_heights/trees_lidar_linefiltered/114_normalized.las")
l
b
b[1:10,]
l
b
extent(l)
lc
plot(lc[[1]])
plot(lc[1])
b
lc
plot(lc[93])
plot(lc[[93]])
m
plot(b)
dev.off()
dev.off()
dev.off()
plot(b)
library(foreach)
fl
fl
fl
f <- fl[1]
b
plot(b)
plot(extent(l), add = T)
plot(as(extent(l),"SpatialPolygons"), add = T)
plot(as(extent(l),"SpatialPolygons"))
plot(b, add = T)
str(lc)
length(lc)
b
bc
install.packages("doParallel")
k
b
b
f
fl
f <- fl[1]
lc
warnings()
o
i
library(stringr)
i
b
fl
f <- fl[2]
closeAllConnections()
closeAllConnections()
closeAllConnections()
b
b
fl
f <- fl[2]
plot(l)
f <- fl[1]
plot(l)
plot(l)
bc
plot(bc)
f
f <- fl[2]
plot(bc)
trees
trees
plot(trees)
plot(p, add = T)
d
?distance
?dist
trees
head(trees@data)
coords(trees)
coordinates(trees)
d
head(d)
str(d)
i <0 which(d < 16)
i <i which(d < 16)
i <- which(d < 16)
i
d[i]
d
colname(d[i])
colnames(d[i])
colnames(d)
dimnames(d)
names(d)
str(d)
d
n
n
plot(trees[1:10,])
plot(p[1:10,])
dev.off()
dev.off()
dev.off()
dev.off()
n
plot(trees[n,])
plot(p[n,])
plot(p)
p
p
pd
plot(pd)
pd
plot(pd)
pd
plot(pd)
pd
trees
ts
?over
trees
ts
o[1]
o[1]
o[4]
o[[4]]
str(o[[4]])
o[[4]]$UID[o[[4]]$DBH == max(o[[4]]$DBH)]
o[[4]]$DBH == max(o[[4]]$DBH)
o[[4]]$UID[o[[4]]$DBH == max(as.numeric(o[[4]]$DBH))]
)uids
uids
uids
trees
trees
p
pd
trees
plot(ts)
plot(pd)
pd
plot(pd)
p
pd
plot(p)
plot(pa)
pa
plot(pd)
pd
plot(pa)
pa
pd
plot(pd)
pd
p
plot(p)
plot(p)
p
plot(p)
p
pd
p
trees
uids
length(uids)
pa
pd
trees
p
plot(p)
trees
head(uids)
o
head(o)
plot(pd[1:4,])
plot(pd[4,])
str(o)
uids
head(o)
uids
uids
o[6]
o[6]
uids
warnings()
uids
po
p
p
po
fl
closeAllConnections()
  C-c C-c
fl
lf
fl
f <- fl[69]
plot(l)
plot(b)
plot(as(extent(l), "SpatialPolygons"), add = T)
fl
fl[-69]
fl[69]
f
fl
f <- fl[11]
l
plot(l)
plot(bc)
fl
fl[-69][11:110]
fl[-69][11:110][6]
fl[-69][11:110][60]
f <- fl[-69][11:110][60]
l
bc
i
hs
hs
head(h2016)
str(h2016)
l
plot(l, color = "Classification")
1
3
?tin
3
3
l <- readLAS("/home/erker/hgt_data/dane_lidar_2017/ftp.ssec.wisc.edu/pub/wisconsinview/lidar/Dane/Dane_2017_3DEP_Delivery/Classified_LAS/ESRI/0818_esri.las")
plot(l)
?readLAS
rlas:::lasfilterusage()
l <- readLAS("/home/erker/hgt_data/dane_lidar_2017/ftp.ssec.wisc.edu/pub/wisconsinview/lidar/Dane/Dane_2017_3DEP_Delivery/Classified_LAS/ESRI/0818_esri.las", filter = "-drop_class 9")
plot(l)
plot(l, color = "Classification")
ln <- lasnormalize(l)
ln <- lasnormalize(l, algorithm = tin())
l <- readLAS("/home/erker/hgt_data/dane_lidar_2017/ftp.ssec.wisc.edu/pub/wisconsinview/lidar/Dane/Dane_2017_3DEP_Delivery/Classified_LAS/ESRI/0818_esri.las")
l@data$Classification[l@data$Classification == 9] <- 2
plot(l, color = "Classification")
ln <- lasnormalize(l, algorithm = tin())
plot(ln)
head(ctg2017@data$Classification)
summary(ctg2017@data$Classification)
fs
fs
library(lidR)
  ctg2017norm <- catalog("~/hgt_data/dane_lidar_2017/normalized")
  opt_output_files(ctg2017norm) <- "~/hgt_data/madison_lidar_2017_heights/all_chm/{ORIGINALFILENAME}_chm"
  opt_filter(ctg2017norm) <- "-drop_z_above 120 -drop_z_below 6"
  chm <- grid_canopy(ctg2017norm, res = 3, p2r(1))
chm
plot(chm)
diff
first
max(first)
ground
first
?transform
?raster
?raster-package
?projectRaster
diff
plot(diff)
plot(first)
plot(ground)
plot(ground)
e <- drawExtent()
ge <- crop(ground, e)
plot(ge)
e <- drawExtent()
ge <- crop(ge, e)
fe <- crop(first, e)
plot(ge)
plot(fe)
plot(ge)
plot(fe - ge)
tr <- shapefile("/home/erker/hgt_data/madison_tree_inventories/hgt/trees_buf_excludeNearNeigh.shp")
tr
tr[tr@data$DBH > 20,]
tr[as.numeric(tr@data$DBH) > 20,]
tr
po
fl
b
fl
tiles
fl
str_extract(fl, "[0-9]{4}")
str_extract_all(fl, "[0-9]{4}")
str_extract_all(fl, "[0-9]{4}")[2]
lapply(str_extract_all(fl, "[0-9]{4}"), function(x) x[2])
unlist(lapply(str_extract_all(fl, "[0-9]{4}"), function(x) x[2]))
str(tiles@data)
tiles.w.trees
plot(tiles.w.trees)
seq(length(tiles.w.trees))
tiles.w.trees.i
b
tiles
bo
head(bo)
tiles.w.trees.i
length(tiles.w.trees.i)
fl
plot(l)
f <- fl[49]
i
i
bc
plot(bc)
plot(bc[1:100,])
plot(bc[200:300,])
c
plot(bc)
lc
plot(lc[[1]])
plot(lc[[2]])
plot(lc[[3]])
plot(lc[[4]])
l
l
plot(l)
plot(lc[[4]])
plot(l)
plot(l)
plot(lc[[4]])
?gContainsProperly
b
tile.w.trees
tile.w.trees
fl
tile.w.trees
tiles.w.trees
plot(tiles.w.trees)
i <- "0823"
cc
lc
bc
?readLAS
l
seq(length(bc))
i
i <- 1
j <- 1
lc
bc
gArea(bc, byid = T)
round(gArea(bc[j,]) == 198)
round(gArea(bc[j,])) == 198
lc
lc@header
str(lc)
nrow(lc@data)
fl
b
b
fl
fl
rm(b)
fl
f <- fl[49]
f
i
bc
bc@data$UID
bc[904:911,]
gArea(bc[904:911,])
gArea(bc[904:911,], byid = T)
bc
bc[904:911,]
bc[904:911,]@data$UID
)
?sample
sample(l2017@data$Z, nsub)
sample(l2017@data$Z, nsub)
sample(l2017@data$Z, nsub)
sample(l2017@data$Z, nsub)
sample(l2017@data$Z, nsub)
sample(l2017@data$Z, nsub)
sample(l2017@data$Z, nsub)
sample(l2017@data$Z, nsub)
sample(l2017@data$Z, nsub)
sample(l2017@data$Z, nsub)
l2017@data$Z
sort(l2017@data$Z)
l2017
l2017
uid
uid
uid
l2017
bias
out
out
trees
table(trees@data$Genus)
sort(table(trees@data$Genus))
(table(trees@data$Genus))
str((table(trees@data$Genus))
)
str(sort(table(trees@data$Genus))
)
str(sort(table(trees@data$Genus), decreasing = T))
dimnames(sort(table(trees@data$Genus), decreasing = T))
(sort(table(trees@data$Genus), decreasing = T))
dimnames(sort(table(trees@data$Genus), decreasing = T))
dimnames(sort(table(trees@data$Genus), decreasing = T))[1:41]
dimnames(sort(table(trees@data$Genus), decreasing = T))[[1]][1:41]
dimnames(sort(table(trees@data$Genus), decreasing = T))[[1]][1:42]
trees
200 / 12
trees
str(trees@data)
o
uids
po
p
po
po
po
install.packages("velox")
res
ps
year <- 2017
fs
out
hgt
s
ps[s,]
p[s,]
str(p[s,])
head(o)
r.v
k
c
  C-c C-c
rm(p)
p
ps
str(r.v)
r
o
o
height2005
length(height2005)
ps
str(height2009)
ps
str(ps@data)
head(dg)
head(dg)
library(ggplot2)
summary(filter(dg, year == 2010))
unique(filter(dg, year == 2010))
unique(filter(dg, year == 2010)$height)
dgs
dgs
dgs
filter(dg, Genus == "Fraxinus", height < 20)
filter(dg, UID %in% uid.no.neg.inf, Genus == "Fraxinus", height < 20)
?tilemanage
?tilemanager
?TileManager
install.packages("TileManager")
?TileScheme
ts
plot(ts)
dev.off()
dev.off()
dev.off()
plot(ts)
plot(h2010, add = T)
plot(h2010)
plot(ts, add = T)
ts
plot(ts$nbuffPolygons)
