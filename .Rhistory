las
summary(las@data$Classification)
summary(factor(las@data$Classification))
plot(las, color = "Classification")
tile
plot(l2009)
?opt_
/home/erker/hgt_data/madison_lidar_2009_heights/all_chm/lc2t60801f_normalized_chm.tif
library(lidR)
fl
closeAllConnections()
str(hc)
?spread
11-4
str(bad_uids)
str(bad_uids)
str(bad_uids)
str(hc)
239136 /4
str(h)
str(h)
str(h)
?&&
str(h)
  dp <- filter(ngh, Genus %in% c("Acer", "Gleditsia", "Fraxinus"))
?icc
str(d)
str(bad_uids)
str(dc)
head(dn)
str(growth.rates)
filter(growth.rates, uid == "TS00730")
str(dc)
filter(dc, uid == "TS00730")
bad_uids
filter(dc, uid == "TS00730")
bad_uids
str(dc)
str(growth.rates)
filter(growth.rates, uid == "SS00217")
dev.off()
dev.off()
dev.off()
dev.off()
str(hn)
library(Hmisc)
install.packages("Hmisc")
install.packages("forcats")
library(forcats)
?fct_reorder
?mean_cl_boot
?Hmisc::smean.cl.boot()â€™
Hmisc::smean.cl.boot()
?Hmisc::smean.cl.boot
library(Hmisc)
?se
hns
?summarize
hns
hng
hns
?geom_pointrange
str(hn)
summary(hn$emp_max2017)
hist(hn$emp_max2017)
str(hn)
?ifelse
str(hn)
hist(filter(hn, Genus == "Acer")$emp_max2005)
hist(hn$emp_max2017)
hist(hn$emp_max2017)
hist(filter(hn, Genus == "Acer")$emp_max2005)
hist(hn$emp_max2017)
100000 / (48*40)
4000 / 50
head(d)
str(growth.rates.f)
str(d)
str(growth.rates.f)
str(d)
str(d)
str(d)
str(df)
filter(d, uid == "ST54668")
str(df)
str(df)
?stat_smooth
str(df)
str(h)
length(unique(h$uid))
trees
c
p
plot(p)
plot(p)
cd
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
plot(p)
20 / .3048
(20 / .3048)^2 * pi
b
ch6
chm2016
plot(chm2016)
dev.off()
dev.off()
dev.off()
dev.off()
?extract
b
b
hgt_mean
chm2016
min(chm2016)
cellStats(chm2016)
cellStats(chm2016, "min")
-3.4e+38
?raster
fs
  C-c C-c
closeAllConnections()
o
o
o
o
)
o2
str(o2)
str(o2)
b
str(o2)
str(d
)
str(d)
str(d)
install.packages("dynatopmodel")
plot(dem)
dem
dem
trees
trees
  C-c C-c
dem
trees
gBuffer(trees[1,], 1000)
plot(demc)
c
ter
plot(ter)
plot(ter)
?aggregate
plot(demca)
plot(dema)
plot(dema)
plot(dema)
plot(dema)
closeAllConnections()
closeAllConnections()
closeAllConnections()
closeAllConnections()
closeAllConnections()
closeAllConnections()
?extract
trees_ter_5ft
trees_ter_5ft
trees_ter_200ft
saveRDS(trees_ter_200ft@data, "~/hgt_data/terrain_at_trees.rds")
plot(tree_r)
plot(tree_r)
plot(tree_r)
closeAllConnections()
closeAllConnections()
closeAllConnections()
closeAllConnections()
e <- drawExtent()
te <- crop(tree_r, e)
plot(te)
plot(tree_r_m)
n
tree_r_m
tree_r
-3e10
-3e3
trees
tp
head(d)
head(e)
str(e
)
str(e)
str(df)
head(df, 1000)
head(df, 1000)
trees
length(unique(trees@data$UID))
unique(trees)
?duplicate
?duplicated
trees
str(traits)
str(h)
trees
coordinates(trees)
?coordinates
str(coords)
str(coords)
str(coords)
str(coords)
str(coords)
head(coords)
plot(coords)
trees
str(h)
head(d)
str(d)
str(terr)
str(d)
str(terr)
str(d)
str(hgt_wn20m)
str(d)
str(traits)
head(d)
str(d)
str(d)
str(d)
str(d)
str(traits)
str(d)
str(d)
str(d)
str(dt)
str(dt)
head(dt)
?facet_wrap
str(d)
str(d)
str(dt)
str(d)
summary(d$tpi_5ft)
filter(d, tpi_5ft > 5)
str(h)
sum(is.na(h$growth.rate))
str(d)
trees_ter_welv
str(trees_ter_welv)
str(trees_ter_welv)
str(trees_ter_welv)
trees_ter_welv
h
str(h)
trees_ter_welv
str(trees_ter_welv@data)
str(trees_ter_welv)
str(d)
?lm
str(d)
m1
summary(m1)
plot(m1)
summary(d$growth.rate)
install.packages("randomForest")
head(d)
mrf
str(dc)
?randomForest
str(dc)
sum(complete.cases(d)
)
summary(dc)
mrf
str(d)
str(d)
str(d)
str(d)
m1
str(dterr)
summary(dterr$aspect_5ft)
summary(dterr$aspect_5ft * pi)
summary(dterr$aspect_5ft * 180 /pi)
str(d)
mrf
str(importance(mrf))
plot(mrf)
install.packages("randomForestExplainer")
explain_forest(mrf)
?randomForest
?importanceframe
importanceframe
?plot_importance_ggpairs
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
?iml
?partialPlot
install.packages("pdp")
?plotPartial
dev.off()
dev.off()
dev.off()
dev.off()
pp
?boxplot
pp
data.frame(pp)
str(genus_by_2005height)
.4 / .3048
.4 * .3048
trees
head(trees)
grepl("ST[0-9]+",trees@data$UID)
imp
landcover
landcover
imp
?raster::extract
imp
imp
trees20m
trees20m
trees20m
sum(!duplicated(trees20m@data),])
sum(!duplicated(trees20m@data))
trees20m[!duplicated(trees20m@data),]
trees20m
trees20m
trees20m_nd
trees20m_nd
trees20m_nd
trees20m_nd
trees20m
trees20m
?extract
str(landcover)
str(landcover)
rm(landcover)
trees20m
trees20m
crs(landcover)
head(imp)
rm(landcover)
trees20m)
trees20m
str(landcover)
ls
str(landcover)
o
o
367/ 1230
367/ 1239
o
head(d)
head(d)
head(d)
head(d)
str(d)
str(d)
str(d)
head(d)
head(pct_imp)
summary(pct_imp)
plot(trees20m[1:10,])
plot(trees100m[1:10,])
str(d)
str(d)
str(d)
str(d)
summary(d$pct_imp_20m)
?case_when
str(d)
importance(mrf)
str(importance(mrf))
str(d)
unique(d$Genus)
trees
colnames(trees)
colnames(trees@data)
head(trees@data)
stt <- read.csv("/home/erker/hgt_data/madison_tree_inventories/STTREES.csv")
str(stt)
summary(stt$UTILPRES)
table(stt$UTILPRES)
str(stt)
str(d)
unique(select(d, powerlines, street))
?case_when
)
ggplot(d, aes(x = x, y = y, color = street_powerlines)) + geom_point()
ggplot(d, aes(x = x, y = y, color = street_powerlines)) + geom_point(alpha = .1)
ggplot(d, aes(x = x, y = y, color = street_powerlines)) + geom_point(size = .1)
p <- ggplot(d, aes(x = x, y = y, color = street_powerlines)) + geom_point(size = .1)
library(plotly)
plotly(p)
ggplotly(p)
ggplotly(p)
p <- ggplot(d, aes(x = x, y = y, color = street_powerlines)) + geom_point(size = 1)
ggplotly(p)
str(d)
?lm
str(dc)
str(dc)
str(dc)
str(d0
str(d)
str(d)
str(d)
str(dc)
ibrary(broom)
reg <- lm(Sepal.Length ~ Sepal.Width + Petal.Length + Petal.Width, data = iris)
ggcoef(reg)
d <- as.data.frame(Titanic)
reg2 <- glm(Survived ~ Sex + Age + Class, family = binomial, data = d, weights = d$Freq)
ggcoef(reg2, exponentiate = TRUE)
ggcoef(
  reg2, exponentiate = TRUE, exclude_intercept = TRUE,
  errorbar_height = .2, color = "blue", sort = "ascending"
)
library(broom)
install.packages("broom")
library(broom)
reg <- lm(Sepal.Length ~ Sepal.Width + Petal.Length + Petal.Width, data = iris)
ggcoef(reg)
d <- as.data.frame(Titanic)
reg2 <- glm(Survived ~ Sex + Age + Class, family = binomial, data = d, weights = d$Freq)
ggcoef(reg2, exponentiate = TRUE)
ggcoef(
  reg2, exponentiate = TRUE, exclude_intercept = TRUE,
  errorbar_height = .2, color = "blue", sort = "ascending"
)
library(GGally)
library(GGally)
library(broom)
reg <- lm(Sepal.Length ~ Sepal.Width + Petal.Length + Petal.Width, data = iris)
ggcoef(reg)
d <- as.data.frame(Titanic)
reg2 <- glm(Survived ~ Sex + Age + Class, family = binomial, data = d, weights = d$Freq)
ggcoef(reg2, exponentiate = TRUE)
ggcoef(
  reg2, exponentiate = TRUE, exclude_intercept = TRUE,
  errorbar_height = .2, color = "blue", sort = "ascending"
)
str(dc)
unique(dc$st_po)
unique(dc$st_po)
str(dc)
)
str(mc)
str(tr)
?standardize
?scale
str(dc)
?scale_color_brewer
m.quercus
tidy(m.quers)
tidy(m.quercus)
tidy(m.quercus)$term
?facet_wrap
str(d)
m.quercus
tidy(m.quercus)$term
tidy(m.quercus)$term
mc
summary(d$pct_imp_100m)
summary(d$pct_imp_20m)
)
?filter
)
?filter
mc
str(dc)
sqrt(.0140445)
cite(randomForest)
?cite
cite("randomForest")
??randomForest
?randomForest
library(orgUtils)
library(orgutils)
?plot_min_depth_interactions
library(ggplot2)
interactions_frame
str(interactions_frame)
?reorder_fct
?fct_reorder
